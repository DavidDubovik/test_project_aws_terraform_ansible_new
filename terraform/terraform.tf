
resource "aws_instance" "my_project" {                 # тут ми створює віртуальну машину (EC2-інстанс) у AWS. Та вказуємо інікальне имя ресурса  
  ami             = var.ami            # тут ми вказуємо шаблони операціїних систем та програмного забеспечення
  instance_type   = var.instance_type                         # Визначає тип EC2-інстансу, тобто апаратні характеристики (процесор, пам’ять, мережа тощо). У коді: "t3.micro" — це один із найменших і найдешевших типів інстансів (1 vCPU, 1 ГБ оперативної пам’яті), який підходить для легких задач, тестування чи розробки.
  key_name        = "key_vm"                           # Це ім’я SSH-ключа, який використовується для доступу до інстансу через SSH
  security_groups = [aws_security_group.ssh_only.name] # Визначає групи безпеки (Security Groups), які контролюють вхідний і вихідний мережевий трафік до інстансу.

  provisioner "local-exec" {                       # це механізм у Terraform, який дозволяє виконувати додаткові дії після створення, local-exec: Виконує команду локально на машині, де запущений Terraform.
    command = "echo ${self.public_ip} > hosts.txt" # тут команда яку треба виконати після створення ресурса, она зберігає ip ресурса в файл hosts.txt
    # про атрибути можна почитати на офіційеомо сайті terraform: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ami_copy
  }

}
resource "aws_security_group" "ssh_only" { # Цей блок створює групу безпеки в AWS, яка діє як віртуальний брандмауер для контролю мережевого трафіку до ресурсів AWS (наприклад, EC2-інстансів)
  name        = "ssh_only_tf"              # це унікальне ім’я групи безпеки в AWS.
  vpc_id      = "vpc-038991d1917b09f3e"
  description = "Allow SSH only" # Це короткий опис групи безпеки, який відображається в AWS Console

  ingress {                     # Дозволяє вхідний трафік на порт 22 (SSH) для ресурсів, які використовують цю групу безпеки
    from_port   = 22            # Вказує початковий порт для вхідного трафіку. Порт 22 — це стандартний порт для протоколу SSH.
    to_port     = 22            # Вказує кінцевий порт. У цьому випадку діапазон портів обмежений лише портом 22 (один порт).
    protocol    = "tcp"         # Вказує протокол, який використовується. SSH працює через TCP, тому тут вказано "tcp".
    cidr_blocks = ["0.0.0.0/0"] # Визначає, з яких IP-адрес дозволено доступ. "0.0.0.0/0" означає будь-яка IP-адреса (весь інтернет).
  }

  ingress { # це блок створений для приймання http запитів 
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {          # Визначає вихідний трафік із ресурсів, які використовують цю групу безпеки. Це правило дозволяє весь вихідний трафік (будь-який порт, будь-який протокол, до будь-якої IP-адреси).
    from_port   = 0 # from_port = 0 і to_port = 0: Значення 0 означає, що правило застосовується до усіх портів. У контексті egress це дозволяє вихідний трафік на будь-який порт.
    to_port     = 0
    protocol    = "-1"          # Значення "-1" означає усі протоколи (TCP, UDP, ICMP тощо). Це універсальне налаштування для дозволу будь-якого типу трафіку.
    cidr_blocks = ["0.0.0.0/0"] # Дозволяє вихідний трафік до будь-якої IP-адреси (весь інтернет).
  }
}

output "server_ip" { # цей блок виводить ip ресурса якого ми створили в consol 
  value = aws_instance.my_project.public_ip
}
